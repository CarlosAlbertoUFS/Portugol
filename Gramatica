/*****************************************************************************************
* Copyright (c) 2014, Carlos Alberto Santos de Souza (carlos.albertoufs@gmail.com) lala
*                     Samir Dantas Oliveira (samir.ufs@hotmail.com)
All Rights Reserved.
*
******************************************************************************************/

Package org.compiler.portugol;


Helpers
//define terminais
	a = 'a'; 
	b = 'b'; 
	c = 'c';
	d = 'd';
	f = 'f';
	g = 'g';
	h = 'h';
	i = 'i';
	j = 'j';
	k = 'k';
	l = 'l';
	m = 'm';
	n = 'n';
	o = 'o';
	p = 'p';
	q = 'q';
	r = 'r';
	s = 's';
	t = 't';
	u = 'u';
	v = 'v';
	x = 'x';
	y = 'y';
	w = 'w';
	z = 'z';
	
	chave_dir = '{' ;
	chave_esq = '}' ;
	colchete_dir = '[';
	colchete_esq = ']';
	barra = '/';
	contra_barra = '\';
	asterisco = '*';
	
	sublinhado = '_' ;
	barraou = '|' ;
	ascii_char = [0x0 .. 0x7f] ; //define qual parte da tabela ascii usar
	
	letra = ['a' .. 'z'] ;
	letra_m = ['A' .. 'Z'] ;
	digito = ['0' .. '9'] ;
	
	//caracteres não imprimiveis
	tab = 9 ;
	cr = 13 ;
	lf = 10 ;
	blank = ' ' ;
	
	Tokens
	//palavras reservadas
	programa = 'programa' ;
	inicio = 'inicio' ;
	//fim. = ('fim')blanks*'.' ;
	fim = 'fim' ;
	faca = 'faca' ;
	ate = 'ate' ;
	se = 'se' ;
	entao = 'entao';
	senao = 'senao' ;
	avalie = 'avalie' ;
	caso = 'caso' ;
	enquanto = 'enquanto' ;
	repita = 'repita';
	para = 'para' ;
	de = 'de' ;
	passo = 'passo' ;
	leia = 'leia' ;
	escreva = 'escreva' ;
	var = 'var' ;
	fim_se = 'fim se' ;
	fim_enquanto = 'fim enquanto' ;
	fim_para = 'fim para' ;
	fim_repita = 'fim repita' ;
	
	caracter = 'caracter' ;
	inteiro = 'inteiro' ;
	logico = 'logico' ;
	falso = 'falso' ;
	verdade = 'verdade' ;
	
	interrompa = 'interrompa' ; //break em java
	nao = 'nao' ;
	ou = 'ou' ;
	procedimento = 'procedimento' ;
	xou = 'xou' ;
	e = 'e' ;
	vetor = 'vetor' ;
	const = 'const' ;
	
	
	//símbolos aritméticos
	mais = '+' ;
	menos = '-';
	mult = '*';
	divisao = '/';
	exponenciacao = '^';
	resto = '%' ;
	
	atrib ='<-' ;
	
	//logico
	maiorq = '>' ;
	menorq = '<' ;
	maior_igual = '>=' ;
	menor_igual = '<=';
	igual = '=';
	diferente = '<>' ;
	
	
	//pontuacao
	virgula = ',';
	dois_pontos = ':' ;
	ponto_virgula = ';';
	ponto = '.' ;
	parentese_dir = '(';
	parentese_esq = ')';
	
	//definicao identificadores
	//identificador = (letra | sublinhado) + (letra | letra_m | digito | sublinhado)*;
	identificador = [letra | sublinhado] + (letra | letra_m | digito | sublinhado)*;
	
	//numeros
	numero = digito+ ;
	
	//comentários
	comentario = barra barra [ascii_char -[cr + lf]]*;
	
	
	  //em branco
	  blanks = blank | cr lf | cr | lf | tab ;
	  
	  Ignored Tokens
	    comentario, blanks ;
