/* This file was generated by SableCC (http://www.sablecc.org/). */

package lexer;

import java.io.*;
import node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.NORMAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 55:
                        {
                            @SuppressWarnings("hiding") Token token = new55(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 56:
                        {
                            @SuppressWarnings("hiding") Token token = new56(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 57:
                        {
                            @SuppressWarnings("hiding") Token token = new57(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 58:
                        {
                            @SuppressWarnings("hiding") Token token = new58(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                                case 0: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    case 59:
                        {
                            @SuppressWarnings("hiding") Token token = new59(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    case 60:
                        {
                            @SuppressWarnings("hiding") Token token = new60(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    case 61:
                        {
                            @SuppressWarnings("hiding") Token token = new61(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    case 62:
                        {
                            @SuppressWarnings("hiding") Token token = new62(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPrograma(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInicio(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFim(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFaca(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAte(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSe(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEntao(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSenao(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAvalie(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaso(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnquanto(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRepita(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPara(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDe(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPasso(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLeia(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEscreva(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVar(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimSe(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimEnquanto(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimPara(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimRepita(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaracter(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInteiro(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLogico(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFalso(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVerdade(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInterrompa(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNao(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOu(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProcedimento(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TXou(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TE(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVetor(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConst(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMais(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenos(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDivisao(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TExponenciacao(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TResto(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAtrib(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMaiorq(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenorq(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMaiorIgual(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenorIgual(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIgual(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiferente(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVirgula(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDoisPontos(line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPontoVirgula(line, pos); }
    Token new51(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPonto(line, pos); }
    Token new52(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TParenteseDir(line, pos); }
    Token new53(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TParenteseEsq(line, pos); }
    Token new54(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumero(text, line, pos); }
    Token new55(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentario(text, line, pos); }
    Token new56(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlanks(text, line, pos); }
    Token new57(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentificador(text, line, pos); }
    Token new58(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComment(line, pos); }
    Token new59(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCommentEnd(line, pos); }
    Token new60(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCommentBody(text, line, pos); }
    Token new61(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStar(line, pos); }
    Token new62(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSlash(line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // NORMAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {37, 37, 5}, {40, 40, 6}, {41, 41, 7}, {42, 42, 8}, {43, 43, 9}, {44, 44, 10}, {45, 45, 11}, {46, 46, 12}, {47, 47, 13}, {48, 57, 14}, {58, 58, 15}, {59, 59, 16}, {60, 60, 17}, {61, 61, 18}, {62, 62, 19}, {65, 90, 20}, {94, 94, 21}, {95, 95, 22}, {97, 97, 23}, {98, 98, 24}, {99, 99, 25}, {100, 100, 26}, {101, 101, 27}, {102, 102, 28}, {103, 104, 24}, {105, 105, 29}, {106, 107, 24}, {108, 108, 30}, {109, 109, 24}, {110, 110, 31}, {111, 111, 32}, {112, 112, 33}, {113, 113, 24}, {114, 114, 34}, {115, 115, 35}, {116, 117, 24}, {118, 118, 36}, {119, 119, 24}, {120, 120, 37}, {121, 122, 24}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 9, 1}, {10, 10, 38}, {13, 32, -2}, },
            {{9, 32, -2}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {{42, 42, 39}, {47, 47, 40}, },
            {{48, 57, 14}, },
            {},
            {},
            {{45, 45, 41}, {61, 61, 42}, {62, 62, 43}, },
            {},
            {{61, 61, 44}, },
            {{48, 57, 45}, {65, 90, 46}, {95, 95, 47}, {97, 122, 48}, },
            {},
            {{48, 122, -22}, },
            {{48, 95, -22}, {97, 115, 48}, {116, 116, 49}, {117, 117, 48}, {118, 118, 50}, {119, 122, 48}, },
            {{48, 122, -22}, },
            {{48, 95, -22}, {97, 97, 51}, {98, 110, 48}, {111, 111, 52}, {112, 122, 48}, },
            {{48, 95, -22}, {97, 100, 48}, {101, 101, 53}, {102, 122, 48}, },
            {{48, 95, -22}, {97, 109, 48}, {110, 110, 54}, {111, 114, 48}, {115, 115, 55}, {116, 122, 48}, },
            {{48, 95, -22}, {97, 97, 56}, {98, 104, 48}, {105, 105, 57}, {106, 122, 48}, },
            {{48, 109, -29}, {110, 110, 58}, {111, 122, 48}, },
            {{48, 100, -28}, {101, 101, 59}, {102, 110, 48}, {111, 111, 60}, {112, 122, 48}, },
            {{48, 95, -22}, {97, 97, 61}, {98, 122, 48}, },
            {{48, 95, -22}, {97, 116, 48}, {117, 117, 62}, {118, 122, 48}, },
            {{48, 95, -22}, {97, 97, 63}, {98, 113, 48}, {114, 114, 64}, {115, 122, 48}, },
            {{48, 100, -28}, {101, 101, 65}, {102, 122, 48}, },
            {{48, 100, -28}, {101, 101, 66}, {102, 122, 48}, },
            {{48, 95, -22}, {97, 97, 67}, {98, 100, 48}, {101, 101, 68}, {102, 122, 48}, },
            {{48, 95, -22}, {97, 110, 48}, {111, 111, 69}, {112, 122, 48}, },
            {{9, 32, -2}, },
            {},
            {{0, 9, 70}, {11, 12, 70}, {14, 127, 70}, },
            {},
            {},
            {},
            {},
            {{48, 57, 45}, {65, 90, 71}, {95, 95, 72}, {97, 122, 73}, },
            {{48, 122, -22}, },
            {{48, 122, -22}, },
            {{48, 122, -22}, },
            {{48, 100, -28}, {101, 101, 74}, {102, 122, 48}, },
            {{48, 95, -22}, {97, 97, 75}, {98, 122, 48}, },
            {{48, 95, -22}, {97, 113, 48}, {114, 114, 76}, {115, 115, 77}, {116, 122, 48}, },
            {{48, 109, -29}, {110, 110, 78}, {111, 122, 48}, },
            {{48, 122, -22}, },
            {{48, 95, -22}, {97, 112, 48}, {113, 113, 79}, {114, 115, 48}, {116, 116, 80}, {117, 122, 48}, },
            {{48, 95, -22}, {97, 98, 48}, {99, 99, 81}, {100, 122, 48}, },
            {{48, 98, -57}, {99, 99, 82}, {100, 107, 48}, {108, 108, 83}, {109, 122, 48}, },
            {{48, 95, -22}, {97, 108, 48}, {109, 109, 84}, {110, 122, 48}, },
            {{48, 95, -22}, {97, 104, 48}, {105, 105, 85}, {106, 115, 48}, {116, 116, 86}, {117, 122, 48}, },
            {{48, 104, -60}, {105, 105, 87}, {106, 122, 48}, },
            {{48, 95, -22}, {97, 102, 48}, {103, 103, 88}, {104, 122, 48}, },
            {{48, 110, -39}, {111, 111, 89}, {112, 122, 48}, },
            {{48, 122, -22}, },
            {{48, 113, -53}, {114, 114, 90}, {115, 115, 91}, {116, 122, 48}, },
            {{48, 110, -39}, {111, 111, 92}, {112, 122, 48}, },
            {{48, 95, -22}, {97, 111, 48}, {112, 112, 93}, {113, 122, 48}, },
            {{48, 109, -29}, {110, 110, 94}, {111, 122, 48}, },
            {{48, 113, -53}, {114, 114, 95}, {115, 122, 48}, },
            {{48, 113, -53}, {114, 114, 96}, {115, 115, 48}, {116, 116, 97}, {117, 122, 48}, },
            {{48, 116, -34}, {117, 117, 98}, {118, 122, 48}, },
            {{0, 127, -42}, },
            {{48, 122, -47}, },
            {{48, 122, -47}, },
            {{48, 122, -47}, },
            {{48, 122, -22}, },
            {{48, 95, -22}, {97, 107, 48}, {108, 108, 99}, {109, 122, 48}, },
            {{48, 95, -22}, {97, 97, 100}, {98, 122, 48}, },
            {{48, 110, -39}, {111, 111, 101}, {112, 122, 48}, },
            {{48, 95, -22}, {97, 114, 48}, {115, 115, 102}, {116, 122, 48}, },
            {{48, 116, -34}, {117, 117, 103}, {118, 122, 48}, },
            {{48, 95, -22}, {97, 97, 104}, {98, 122, 48}, },
            {{48, 113, -53}, {114, 114, 105}, {115, 122, 48}, },
            {{48, 95, -22}, {97, 97, 106}, {98, 122, 48}, },
            {{48, 114, -80}, {115, 115, 107}, {116, 122, 48}, },
            {{32, 32, 108}, {48, 122, -22}, },
            {{48, 98, -57}, {99, 99, 109}, {100, 122, 48}, },
            {{48, 100, -28}, {101, 101, 110}, {102, 122, 48}, },
            {{48, 95, -22}, {97, 97, 111}, {98, 122, 48}, },
            {{48, 104, -60}, {105, 105, 112}, {106, 122, 48}, },
            {{48, 122, -22}, },
            {{48, 95, -22}, {97, 97, 113}, {98, 122, 48}, },
            {{48, 114, -80}, {115, 115, 114}, {116, 122, 48}, },
            {{48, 98, -57}, {99, 99, 115}, {100, 102, 48}, {103, 103, 116}, {104, 122, 48}, },
            {{48, 104, -60}, {105, 105, 117}, {106, 122, 48}, },
            {{48, 95, -22}, {97, 97, 118}, {98, 122, 48}, },
            {{48, 122, -22}, },
            {{48, 95, -22}, {97, 99, 48}, {100, 100, 119}, {101, 122, 48}, },
            {{48, 110, -39}, {111, 111, 120}, {112, 122, 48}, },
            {{48, 122, -22}, },
            {{48, 104, -60}, {105, 105, 121}, {106, 122, 48}, },
            {{48, 98, -57}, {99, 99, 122}, {100, 122, 48}, },
            {{48, 122, -22}, },
            {{48, 115, -25}, {116, 116, 123}, {117, 122, 48}, },
            {{48, 95, -22}, {97, 97, 124}, {98, 122, 48}, },
            {{48, 110, -39}, {111, 111, 125}, {112, 122, 48}, },
            {{48, 100, -28}, {101, 101, 126}, {102, 122, 48}, },
            {{48, 122, -22}, },
            {{48, 110, -39}, {111, 111, 127}, {112, 122, 48}, },
            {{101, 101, 128}, {112, 112, 129}, {114, 114, 130}, {115, 115, 131}, },
            {{48, 104, -60}, {105, 105, 132}, {106, 122, 48}, },
            {{48, 104, -60}, {105, 105, 133}, {106, 113, 48}, {114, 114, 134}, {115, 122, 48}, },
            {{48, 122, -22}, },
            {{48, 98, -57}, {99, 99, 135}, {100, 122, 48}, },
            {{48, 122, -22}, },
            {{48, 110, -39}, {111, 111, 136}, {112, 122, 48}, },
            {{48, 100, -28}, {101, 101, 137}, {102, 122, 48}, },
            {{48, 113, -53}, {114, 114, 138}, {115, 122, 48}, },
            {{48, 115, -25}, {116, 116, 139}, {117, 122, 48}, },
            {{48, 110, -39}, {111, 111, 140}, {112, 122, 48}, },
            {{48, 95, -22}, {97, 97, 141}, {98, 122, 48}, },
            {{48, 113, -53}, {114, 114, 142}, {115, 122, 48}, },
            {{48, 100, -28}, {101, 101, 143}, {102, 122, 48}, },
            {{48, 115, -25}, {116, 116, 144}, {117, 122, 48}, },
            {{48, 122, -22}, },
            {{48, 109, -29}, {110, 110, 145}, {111, 122, 48}, },
            {{48, 122, -22}, },
            {{48, 95, -22}, {97, 117, 48}, {118, 118, 146}, {119, 122, 48}, },
            {{48, 122, -22}, },
            {{110, 110, 147}, },
            {{97, 97, 148}, },
            {{101, 101, 149}, },
            {{101, 101, 150}, },
            {{48, 110, -39}, {111, 111, 151}, {112, 122, 48}, },
            {{48, 113, -53}, {114, 114, 152}, {115, 122, 48}, },
            {{48, 113, -53}, {114, 114, 153}, {115, 122, 48}, },
            {{48, 110, -39}, {111, 111, 154}, {112, 122, 48}, },
            {{48, 122, -22}, },
            {{48, 99, -98}, {100, 100, 155}, {101, 122, 48}, },
            {{48, 95, -22}, {97, 97, 156}, {98, 122, 48}, },
            {{48, 95, -22}, {97, 97, 157}, {98, 122, 48}, },
            {{48, 122, -22}, },
            {{48, 99, -98}, {100, 100, 158}, {101, 122, 48}, },
            {{48, 122, -22}, },
            {{48, 122, -22}, },
            {{48, 100, -28}, {101, 101, 159}, {102, 122, 48}, },
            {{48, 115, -25}, {116, 116, 160}, {117, 122, 48}, },
            {{48, 95, -22}, {97, 97, 161}, {98, 122, 48}, },
            {{113, 113, 162}, },
            {{114, 114, 163}, },
            {{112, 112, 164}, },
            {},
            {{48, 122, -22}, },
            {{48, 110, -39}, {111, 111, 165}, {112, 122, 48}, },
            {{48, 110, -39}, {111, 111, 166}, {112, 122, 48}, },
            {{48, 122, -22}, },
            {{48, 104, -60}, {105, 105, 167}, {106, 122, 48}, },
            {{48, 108, -59}, {109, 109, 168}, {110, 122, 48}, },
            {{48, 122, -22}, },
            {{48, 100, -28}, {101, 101, 169}, {102, 122, 48}, },
            {{48, 113, -53}, {114, 114, 170}, {115, 122, 48}, },
            {{48, 110, -39}, {111, 111, 171}, {112, 122, 48}, },
            {{48, 122, -22}, },
            {{117, 117, 172}, },
            {{97, 97, 173}, },
            {{105, 105, 174}, },
            {{48, 122, -22}, },
            {{48, 108, -59}, {109, 109, 175}, {110, 122, 48}, },
            {{48, 108, -59}, {109, 109, 176}, {110, 122, 48}, },
            {{48, 95, -22}, {97, 97, 177}, {98, 122, 48}, },
            {{48, 122, -22}, },
            {{48, 122, -22}, },
            {{48, 122, -22}, },
            {{97, 97, 178}, },
            {},
            {{116, 116, 179}, },
            {{48, 111, -67}, {112, 112, 180}, {113, 122, 48}, },
            {{48, 100, -28}, {101, 101, 181}, {102, 122, 48}, },
            {{48, 122, -22}, },
            {{110, 110, 182}, },
            {{97, 97, 183}, },
            {{48, 95, -22}, {97, 97, 184}, {98, 122, 48}, },
            {{48, 109, -29}, {110, 110, 185}, {111, 122, 48}, },
            {{116, 116, 186}, },
            {},
            {{48, 122, -22}, },
            {{48, 115, -25}, {116, 116, 187}, {117, 122, 48}, },
            {{111, 111, 188}, },
            {{48, 110, -39}, {111, 111, 189}, {112, 122, 48}, },
            {},
            {{48, 122, -22}, },
        }
        { // COMMENT
            {{0, 36, 1}, {37, 37, 2}, {38, 39, 1}, {40, 40, 3}, {41, 41, 4}, {42, 42, 5}, {43, 43, 6}, {44, 44, 7}, {45, 45, 8}, {46, 46, 9}, {47, 47, 10}, {48, 57, 11}, {58, 58, 12}, {59, 59, 13}, {60, 60, 14}, {61, 61, 15}, {62, 62, 16}, {63, 93, 1}, {94, 94, 17}, {95, 96, 1}, {97, 97, 18}, {98, 98, 1}, {99, 99, 19}, {100, 100, 20}, {101, 101, 21}, {102, 102, 22}, {103, 104, 1}, {105, 105, 23}, {106, 107, 1}, {108, 108, 24}, {109, 109, 1}, {110, 110, 25}, {111, 111, 26}, {112, 112, 27}, {113, 113, 1}, {114, 114, 28}, {115, 115, 29}, {116, 117, 1}, {118, 118, 30}, {119, 119, 1}, {120, 120, 31}, {121, 127, 1}, },
            {{0, 41, 1}, {43, 46, 1}, {48, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 127, -3}, },
            {{0, 127, -3}, },
            {{47, 47, 32}, },
            {{0, 127, -3}, },
            {{0, 127, -3}, },
            {{0, 127, -3}, },
            {{0, 127, -3}, },
            {{42, 42, 33}, {47, 47, 34}, },
            {{0, 46, -3}, {48, 57, 11}, {58, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 127, -3}, },
            {{0, 41, 1}, {43, 44, 1}, {45, 45, 35}, {46, 46, 1}, {48, 60, 1}, {61, 61, 36}, {62, 62, 37}, {63, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 46, -3}, {48, 60, 1}, {61, 61, 38}, {62, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 46, -3}, {48, 115, 1}, {116, 116, 39}, {117, 117, 1}, {118, 118, 40}, {119, 127, 1}, },
            {{0, 46, -3}, {48, 96, 1}, {97, 97, 41}, {98, 110, 1}, {111, 111, 42}, {112, 127, 1}, },
            {{0, 46, -3}, {48, 100, 1}, {101, 101, 43}, {102, 127, 1}, },
            {{0, 46, -3}, {48, 109, 1}, {110, 110, 44}, {111, 114, 1}, {115, 115, 45}, {116, 127, 1}, },
            {{0, 96, -21}, {97, 97, 46}, {98, 104, 1}, {105, 105, 47}, {106, 127, 1}, },
            {{0, 109, -23}, {110, 110, 48}, {111, 127, 1}, },
            {{0, 100, -22}, {101, 101, 49}, {102, 110, 1}, {111, 111, 50}, {112, 127, 1}, },
            {{0, 96, -21}, {97, 97, 51}, {98, 127, 1}, },
            {{0, 46, -3}, {48, 116, 1}, {117, 117, 52}, {118, 127, 1}, },
            {{0, 96, -21}, {97, 97, 53}, {98, 113, 1}, {114, 114, 54}, {115, 127, 1}, },
            {{0, 100, -22}, {101, 101, 55}, {102, 127, 1}, },
            {{0, 100, -22}, {101, 101, 56}, {102, 127, 1}, },
            {{0, 96, -21}, {97, 97, 57}, {98, 100, 1}, {101, 101, 58}, {102, 127, 1}, },
            {{0, 46, -3}, {48, 110, 1}, {111, 111, 59}, {112, 127, 1}, },
            {},
            {},
            {{0, 9, 60}, {11, 12, 60}, {14, 127, 60}, },
            {{0, 127, -3}, },
            {{0, 127, -3}, },
            {{0, 127, -3}, },
            {{0, 127, -3}, },
            {{0, 100, -22}, {101, 101, 61}, {102, 127, 1}, },
            {{0, 96, -21}, {97, 97, 62}, {98, 127, 1}, },
            {{0, 46, -3}, {48, 113, 1}, {114, 114, 63}, {115, 115, 64}, {116, 127, 1}, },
            {{0, 109, -23}, {110, 110, 65}, {111, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 46, -3}, {48, 112, 1}, {113, 113, 66}, {114, 115, 1}, {116, 116, 67}, {117, 127, 1}, },
            {{0, 46, -3}, {48, 98, 1}, {99, 99, 68}, {100, 127, 1}, },
            {{0, 98, -47}, {99, 99, 69}, {100, 107, 1}, {108, 108, 70}, {109, 127, 1}, },
            {{0, 46, -3}, {48, 108, 1}, {109, 109, 71}, {110, 127, 1}, },
            {{0, 46, -3}, {48, 104, 1}, {105, 105, 72}, {106, 115, 1}, {116, 116, 73}, {117, 127, 1}, },
            {{0, 104, -50}, {105, 105, 74}, {106, 127, 1}, },
            {{0, 46, -3}, {48, 102, 1}, {103, 103, 75}, {104, 127, 1}, },
            {{0, 110, -33}, {111, 111, 76}, {112, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 113, -43}, {114, 114, 77}, {115, 115, 78}, {116, 127, 1}, },
            {{0, 110, -33}, {111, 111, 79}, {112, 127, 1}, },
            {{0, 46, -3}, {48, 111, 1}, {112, 112, 80}, {113, 127, 1}, },
            {{0, 109, -23}, {110, 110, 81}, {111, 127, 1}, },
            {{0, 113, -43}, {114, 114, 82}, {115, 127, 1}, },
            {{0, 113, -43}, {114, 114, 83}, {115, 115, 1}, {116, 116, 84}, {117, 127, 1}, },
            {{0, 116, -28}, {117, 117, 85}, {118, 127, 1}, },
            {{0, 127, -36}, },
            {{0, 127, -3}, },
            {{0, 46, -3}, {48, 107, 1}, {108, 108, 86}, {109, 127, 1}, },
            {{0, 96, -21}, {97, 97, 87}, {98, 127, 1}, },
            {{0, 110, -33}, {111, 111, 88}, {112, 127, 1}, },
            {{0, 46, -3}, {48, 114, 1}, {115, 115, 89}, {116, 127, 1}, },
            {{0, 116, -28}, {117, 117, 90}, {118, 127, 1}, },
            {{0, 96, -21}, {97, 97, 91}, {98, 127, 1}, },
            {{0, 113, -43}, {114, 114, 92}, {115, 127, 1}, },
            {{0, 96, -21}, {97, 97, 93}, {98, 127, 1}, },
            {{0, 114, -67}, {115, 115, 94}, {116, 127, 1}, },
            {{0, 31, 1}, {32, 32, 95}, {33, 41, 1}, {43, 127, -3}, },
            {{0, 98, -47}, {99, 99, 96}, {100, 127, 1}, },
            {{0, 100, -22}, {101, 101, 97}, {102, 127, 1}, },
            {{0, 96, -21}, {97, 97, 98}, {98, 127, 1}, },
            {{0, 104, -50}, {105, 105, 99}, {106, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 96, -21}, {97, 97, 100}, {98, 127, 1}, },
            {{0, 114, -67}, {115, 115, 101}, {116, 127, 1}, },
            {{0, 98, -47}, {99, 99, 102}, {100, 102, 1}, {103, 103, 103}, {104, 127, 1}, },
            {{0, 104, -50}, {105, 105, 104}, {106, 127, 1}, },
            {{0, 96, -21}, {97, 97, 105}, {98, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 46, -3}, {48, 99, 1}, {100, 100, 106}, {101, 127, 1}, },
            {{0, 110, -33}, {111, 111, 107}, {112, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 104, -50}, {105, 105, 108}, {106, 127, 1}, },
            {{0, 98, -47}, {99, 99, 109}, {100, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 115, -20}, {116, 116, 110}, {117, 127, 1}, },
            {{0, 96, -21}, {97, 97, 111}, {98, 127, 1}, },
            {{0, 110, -33}, {111, 111, 112}, {112, 127, 1}, },
            {{0, 100, -22}, {101, 101, 113}, {102, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 110, -33}, {111, 111, 114}, {112, 127, 1}, },
            {{0, 100, -22}, {101, 101, 115}, {102, 111, 1}, {112, 112, 116}, {113, 113, 1}, {114, 114, 117}, {115, 115, 118}, {116, 127, 1}, },
            {{0, 104, -50}, {105, 105, 119}, {106, 127, 1}, },
            {{0, 104, -50}, {105, 105, 120}, {106, 113, 1}, {114, 114, 121}, {115, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 98, -47}, {99, 99, 122}, {100, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 110, -33}, {111, 111, 123}, {112, 127, 1}, },
            {{0, 100, -22}, {101, 101, 124}, {102, 127, 1}, },
            {{0, 113, -43}, {114, 114, 125}, {115, 127, 1}, },
            {{0, 115, -20}, {116, 116, 126}, {117, 127, 1}, },
            {{0, 110, -33}, {111, 111, 127}, {112, 127, 1}, },
            {{0, 96, -21}, {97, 97, 128}, {98, 127, 1}, },
            {{0, 113, -43}, {114, 114, 129}, {115, 127, 1}, },
            {{0, 100, -22}, {101, 101, 130}, {102, 127, 1}, },
            {{0, 115, -20}, {116, 116, 131}, {117, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 109, -23}, {110, 110, 132}, {111, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 46, -3}, {48, 117, 1}, {118, 118, 133}, {119, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 109, -23}, {110, 110, 134}, {111, 127, 1}, },
            {{0, 96, -21}, {97, 97, 135}, {98, 127, 1}, },
            {{0, 100, -22}, {101, 101, 136}, {102, 127, 1}, },
            {{0, 100, -22}, {101, 101, 137}, {102, 127, 1}, },
            {{0, 110, -33}, {111, 111, 138}, {112, 127, 1}, },
            {{0, 113, -43}, {114, 114, 139}, {115, 127, 1}, },
            {{0, 113, -43}, {114, 114, 140}, {115, 127, 1}, },
            {{0, 110, -33}, {111, 111, 141}, {112, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 99, -85}, {100, 100, 142}, {101, 127, 1}, },
            {{0, 96, -21}, {97, 97, 143}, {98, 127, 1}, },
            {{0, 96, -21}, {97, 97, 144}, {98, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 99, -85}, {100, 100, 145}, {101, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 127, -3}, },
            {{0, 100, -22}, {101, 101, 146}, {102, 127, 1}, },
            {{0, 115, -20}, {116, 116, 147}, {117, 127, 1}, },
            {{0, 96, -21}, {97, 97, 148}, {98, 127, 1}, },
            {{0, 112, -46}, {113, 113, 149}, {114, 127, 1}, },
            {{0, 113, -43}, {114, 114, 150}, {115, 127, 1}, },
            {{0, 111, -57}, {112, 112, 151}, {113, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 127, -3}, },
            {{0, 110, -33}, {111, 111, 152}, {112, 127, 1}, },
            {{0, 110, -33}, {111, 111, 153}, {112, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 104, -50}, {105, 105, 154}, {106, 127, 1}, },
            {{0, 108, -49}, {109, 109, 155}, {110, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 100, -22}, {101, 101, 156}, {102, 127, 1}, },
            {{0, 113, -43}, {114, 114, 157}, {115, 127, 1}, },
            {{0, 110, -33}, {111, 111, 158}, {112, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 116, -28}, {117, 117, 159}, {118, 127, 1}, },
            {{0, 96, -21}, {97, 97, 160}, {98, 127, 1}, },
            {{0, 104, -50}, {105, 105, 161}, {106, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 108, -49}, {109, 109, 162}, {110, 127, 1}, },
            {{0, 108, -49}, {109, 109, 163}, {110, 127, 1}, },
            {{0, 96, -21}, {97, 97, 164}, {98, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 127, -3}, },
            {{0, 127, -3}, },
            {{0, 96, -21}, {97, 97, 165}, {98, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 115, -20}, {116, 116, 166}, {117, 127, 1}, },
            {{0, 111, -57}, {112, 112, 167}, {113, 127, 1}, },
            {{0, 100, -22}, {101, 101, 168}, {102, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 109, -23}, {110, 110, 169}, {111, 127, 1}, },
            {{0, 96, -21}, {97, 97, 170}, {98, 127, 1}, },
            {{0, 96, -21}, {97, 97, 171}, {98, 127, 1}, },
            {{0, 109, -23}, {110, 110, 172}, {111, 127, 1}, },
            {{0, 115, -20}, {116, 116, 173}, {117, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 127, -3}, },
            {{0, 115, -20}, {116, 116, 174}, {117, 127, 1}, },
            {{0, 110, -33}, {111, 111, 175}, {112, 127, 1}, },
            {{0, 110, -33}, {111, 111, 176}, {112, 127, 1}, },
            {{0, 127, -3}, },
            {{0, 127, -3}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // NORMAL
        {56, 56, 56, 56, 56, 40, 52, 53, 37, 35, 48, 36, 51, 38, 54, 49, 50, 43, 46, 42, 57, 39, 57, 57, 57, 57, 57, 32, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 56, 58, 55, 41, 45, 47, 44, 57, 57, 57, 57, 57, 57, 57, 57, 13, 57, 57, 57, 57, 57, 57, 57, 57, 29, 57, 57, 57, 5, 57, 57, 57, 55, 57, 57, 57, 4, 57, 57, 57, 57, 57, 57, 57, 57, 57, 2, 57, 57, 57, 57, 28, 57, 57, 57, 57, 57, 17, 57, 57, 31, 57, 57, 9, 57, 57, 57, 57, 3, 57, -1, 57, 57, 15, 57, 12, 57, 57, 57, 57, 57, 57, 57, 57, 57, 34, 57, 6, 57, 25, -1, -1, -1, -1, 57, 57, 57, 57, 14, 57, 57, 57, 7, 57, 33, 8, 57, 57, 57, -1, -1, -1, 18, 1, 57, 57, 24, 57, 57, 11, 57, 57, 57, 16, -1, -1, -1, 23, 57, 57, 57, 26, 22, 10, -1, 20, -1, 57, 57, 0, -1, -1, 57, 57, -1, 21, 27, 57, -1, 57, 19, 30, },
        // COMMENT
        {60, 60, 40, 52, 53, 37, 35, 48, 36, 51, 38, 54, 49, 50, 43, 46, 42, 39, 60, 60, 60, 32, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 59, 58, 55, 41, 45, 47, 44, 60, 60, 60, 60, 13, 60, 60, 60, 60, 60, 60, 60, 60, 29, 60, 60, 60, 5, 60, 60, 60, 55, 4, 60, 60, 60, 60, 60, 60, 60, 60, 60, 2, 60, 60, 60, 60, 28, 60, 60, 60, 60, 60, 17, 60, 60, 31, 60, 60, 9, 60, 60, 60, 60, 3, 60, 60, 60, 60, 15, 60, 12, 60, 60, 60, 60, 60, 60, 60, 60, 60, 34, 60, 6, 60, 25, 60, 60, 60, 60, 60, 60, 60, 60, 14, 60, 60, 60, 7, 60, 33, 8, 60, 60, 60, 60, 60, 60, 18, 1, 60, 60, 24, 60, 60, 11, 60, 60, 60, 16, 60, 60, 60, 23, 60, 60, 60, 26, 22, 10, 60, 20, 60, 60, 60, 0, 60, 60, 60, 60, 60, 21, 27, 60, 60, 60, 19, 30, },

    };*/

    public static class State
    {
        public final static State NORMAL = new State(0);
        public final static State COMMENT = new State(1);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
